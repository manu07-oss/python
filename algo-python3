Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

answer




from typing import List

class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        def longestCommonPrefix(strs):
            if not strs:
                return ""

            # Sort the array of strings to ensure that the shortest string is at the first position
            strs.sort()

            # Compare the first and last strings (sorted) character by character
            for i in range(len(strs[0])):
                if strs[0][i] != strs[-1][i]:
                    return strs[0][:i]  # Return the prefix up to the point where characters differ

            # If all strings are identical, return any of them (they are all the same)
            return strs[0]

        return longestCommonPrefix(strs)

# Test cases
sol = Solution()
print(sol.longestCommonPrefix(["flower","flow","flight"]))  # Output: "fl"
print(sol.longestCommonPrefix(["dog","racecar","car"]))     # Output: ""
