Longest Common Prefix
Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

from typing import List

class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        def longestCommonPrefix(strs):
            if not strs:
                return ""

            prefix = strs[0]
            for i in range(1, len(strs)):
                while strs[i].find(prefix) != 0:
                    prefix = prefix[:-1]
                    if not prefix:
                        return ""
            return prefix

        # Example here are the usages which i am unlocking the flow, flight, flower:
        strs1 = ["flower", "flow", "flight"]
        print(longestCommonPrefix(strs1))  # Output: "fl"

        strs2 = ["dog", "racecar", "car"]
        print(longestCommonPrefix(strs2))  # Output: ""

# Instantiate the Solution class
solution = Solution()
# Call the method
solution.longestCommonPrefix(["flower", "flow", "flight"])

